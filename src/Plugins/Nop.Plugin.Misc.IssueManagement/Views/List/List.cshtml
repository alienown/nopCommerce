@using Nop.Plugin.Misc.IssueManagement.Models
@using Nop.Plugin.Misc.IssueManagement.Domain

@model IssueSearchModel

@{
    Layout = "_AdminLayout";
    ViewBag.PageTitle = T("Plugins.Misc.IssueManagement.List.Title").Text;
    Html.SetActiveMenuItemSystemName("All issues");
    Html.AddCssFileParts(ResourceLocation.Head, "~/Plugins/Misc.IssueManagement/Content/List/index.css");
}

@{
    const string hideFiltersBlockAttributeName = "Plugins.Misc.IssueManagement.List.FiltersPanel";
    var hideFiltersBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideFiltersBlockAttributeName);
}

<form asp-controller="Issue" asp-action="IssueList" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Plugins.Misc.IssueManagement.List.Issues")
        </h1>
        <div class="pull-right">
            <a asp-action="Add" class="btn bg-blue">
                <i class="fa fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
        </div>
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row search-row @(!hideFiltersBlock ? "opened" : "")" data-hideAttribute="@hideFiltersBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>
                        <div class="search-body @(hideFiltersBlock ? "closed" : "")">
                            @await Html.PartialAsync("~/Plugins/Misc.IssueManagement/Views/List/_Filters.cshtml", Model)
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        @await Html.PartialAsync("~/Plugins/Misc.IssueManagement/Views/List/_Grid.cshtml", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    var filtersScope = function () {
        var self = {};

        function prepareStatusesMultiSelect() {
            var issueStatusesMultiSelect = $('#SearchIssueStatus').data('kendoMultiSelect');
            issueStatusesMultiSelect.setOptions({
                autoClose: false,
                filter: 'contains',
            });
        }

        function preparePrioritiesMultiSelect() {
            var issuePrioritiesMultiSelect = $('#SearchIssuePriority').data('kendoMultiSelect');
            issuePrioritiesMultiSelect.setOptions({
                autoClose: false,
                filter: 'contains',
            });
        }

        self.initialize = function () {
            prepareStatusesMultiSelect();
            preparePrioritiesMultiSelect();
        }

        return self;
    }();

    var gridScope = function () {
        var self = {};

        self.renderIssuePriority = function(data, type, row, meta) {
            var color;
            switch (row.Priority) {
                case @((byte)IssuePriority.Low):
                    color = 'gray';
                    break;
                case @((byte)IssuePriority.Normal):
                    color = 'blue';
                    break;
                case @((byte)IssuePriority.Important):
                    color = 'yellow';
                    break;
                case @((byte)IssuePriority.Urgent):
                    color = 'lightCoral';
                    break;
                case @((byte)IssuePriority.Critical):
                    color = 'red';
                    break;
                default:
                    color = '';
                    break;
            }

            return '<span class="grid-report-item ' + color + '">' + data + '</span >';
        }

        self.renderIssueStatus = function(data, type, row, meta) {
           var color;
           switch (row.Status) {
                case @((byte)IssueStatus.Closed):
                    color = 'green';
                    break;
                case @((byte)IssueStatus.InProgress):
                    color = 'blue';
                    break;
                case @((byte)IssueStatus.New):
                    color = 'gray';
                    break;
                default:
                    color = '';
                    break;
            }

            return '<span class="grid-report-item ' + color + '">' + data + '</span >';
        }

        return self;
    }();

    $(document).ready(function () {
        filtersScope.initialize();
    });
</script>